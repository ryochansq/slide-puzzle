{"version":3,"sources":["classes/Panel.ts","classes/Puzzle.ts","components/DifficultyDialog.tsx","App.tsx","index.tsx"],"names":["Panel","i","j","isLowerRight","calcKey","key","isRightPosition","this","di","dj","Puzzle","split","shuffle","panels","getMovingDirection","k","ni","nj","move","ei","ej","newPanels","map","row","panel","newPuzzle","solved","res","array","Array","fill","forEach","el","l","Math","floor","random","p","np","DifficultyDialog","isDialogOpen","setIsDialogOpen","setSplit","Dialog","open","DialogTitle","DialogContent","RadioGroup","value","onChange","e","parseInt","target","FormControlLabel","control","Radio","label","DialogActions","Button","onClick","color","variant","theme","createMuiTheme","palette","secondary","main","useStyles","makeStyles","createStyles","container","userSelect","backgroundColor","imgWrapper","position","width","overflow","img","top","left","height","objectFit","button","cursor","padding","twitter","fontWeight","textTransform","App","classes","useState","undefined","imageData","setImageData","ratio","setRatio","puzzle","setPuzzle","trans","setTrans","useEffect","panelWidth","buttonText","imgTransform","x","y","gridTransition","state","gridTransform","enter","onEntered","ThemeProvider","Container","component","maxWidth","className","CssBaseline","Grid","spacing","item","justify","Typography","fullWidth","type","accept","hidden","files","file","length","Image","onload","URL","revokeObjectURL","src","naturalHeight","naturalWidth","createObjectURL","reader","FileReader","readAsDataURL","result","xs","direction","Transition","in","timeout","style","transition","transform","paddingTop","alt","text","encodedText","encodeURIComponent","intent","window","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2070160b.chunk.js","sourcesContent":["export default class Panel {\n  i: number;\n\n  j: number;\n\n  isLowerRight: boolean;\n\n  constructor(i: number, j: number, isLowerRight: boolean) {\n    this.i = i;\n    this.j = j;\n    this.isLowerRight = isLowerRight;\n  }\n\n  calcKey = (i: number, j: number): number => i * 100 + j;\n\n  key = (): number => this.calcKey(this.i, this.j);\n\n  isRightPosition = (i: number, j: number): boolean =>\n    this.calcKey(i, j) === this.key();\n}\n","import Panel from './Panel';\n\nconst di = [-1, 0, 0, 1];\nconst dj = [0, -1, 1, 0];\n\nexport default class Puzzle {\n  panels: Panel[][];\n\n  split: number;\n\n  constructor(split: number, shuffle: boolean) {\n    // 初期化\n    const array = [...Array<Panel[]>(split + 2)].map(() =>\n      Array<Panel>(split + 2).fill(new Panel(-1, -1, false))\n    );\n    array.forEach((row, i) =>\n      row.forEach((el, j) => {\n        array[i][j] = new Panel(i, j, i === split && j === split);\n      })\n    );\n\n    // シャッフル\n    if (shuffle) {\n      let i = split;\n      let j = split;\n      for (let l = 0; l < 10000; l += 1) {\n        const k = Math.floor(Math.random() * 4);\n        const [ni, nj] = [i + di[k], j + dj[k]];\n        if (ni >= 1 && ni <= split && nj >= 1 && nj <= split) {\n          const p = new Panel(\n            array[i][j].i,\n            array[i][j].j,\n            array[i][j].isLowerRight\n          );\n          const np = new Panel(\n            array[ni][nj].i,\n            array[ni][nj].j,\n            array[ni][nj].isLowerRight\n          );\n          array[ni][nj] = p;\n          array[i][j] = np;\n          [i, j] = [ni, nj];\n        }\n      }\n    }\n    this.panels = array;\n    this.split = split;\n  }\n\n  getMovingDirection = (i: number, j: number): [number, number] => {\n    for (let k = 0; k < 4; k += 1) {\n      const [ni, nj] = [i + di[k], j + dj[k]];\n      if (this.panels[ni][nj].isLowerRight) return [di[k], dj[k]];\n    }\n    return [0, 0];\n  };\n\n  move = (i: number, j: number, ei: number, ej: number): Puzzle => {\n    const [ni, nj] = [i + ei, j + ej];\n    const newPanels = this.panels.map((row) =>\n      row.map((panel) => new Panel(panel.i, panel.j, panel.isLowerRight))\n    );\n    newPanels[i][j] = this.panels[ni][nj];\n    newPanels[ni][nj] = this.panels[i][j];\n    const newPuzzle = new Puzzle(this.split, false);\n    newPuzzle.panels = newPanels;\n    return newPuzzle;\n  };\n\n  solved = (): boolean => {\n    let res = true;\n    for (let i = 0; i < this.split + 2; i += 1)\n      for (let j = 0; j < this.split + 2; j += 1)\n        if (!this.panels[i][j].isRightPosition(i, j)) res = false;\n    return res;\n  };\n}\n","import React, { VFC } from 'react';\nimport {\n  Button,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  FormControlLabel,\n  Radio,\n  RadioGroup,\n} from '@material-ui/core';\n\ntype Props = {\n  isDialogOpen: boolean;\n  split: number;\n  setIsDialogOpen: React.Dispatch<React.SetStateAction<boolean>>;\n  setSplit: React.Dispatch<React.SetStateAction<number>>;\n};\n\nconst DifficultyDialog: VFC<Props> = ({\n  isDialogOpen,\n  split,\n  setIsDialogOpen,\n  setSplit,\n}: Props) => (\n  <Dialog open={isDialogOpen}>\n    <DialogTitle>難易度を選択</DialogTitle>\n    <DialogContent>\n      <RadioGroup\n        value={split}\n        onChange={(e) => setSplit(parseInt(e.target.value, 10))}\n      >\n        <FormControlLabel\n          control={<Radio value={3} />}\n          label=\"かんたん　　 3×3\"\n        />\n        <FormControlLabel\n          control={<Radio value={4} />}\n          label=\"ふつう　　　 4×4\"\n        />\n        <FormControlLabel\n          control={<Radio value={5} />}\n          label=\"むずかしい　 5×5\"\n        />\n      </RadioGroup>\n    </DialogContent>\n    <DialogActions>\n      <Button\n        onClick={() => setIsDialogOpen(false)}\n        color=\"primary\"\n        variant=\"contained\"\n      >\n        OK\n      </Button>\n    </DialogActions>\n  </Dialog>\n);\nexport default DifficultyDialog;\n","import { VFC, useState, useEffect } from 'react';\nimport {\n  Button,\n  Container,\n  createMuiTheme,\n  CssBaseline,\n  Grid,\n  ThemeProvider,\n  Typography,\n} from '@material-ui/core';\nimport { createStyles, makeStyles } from '@material-ui/core/styles';\nimport { Transition } from 'react-transition-group';\nimport Puzzle from './classes/Puzzle';\nimport DifficultyDialog from './components/DifficultyDialog';\n\nconst theme = createMuiTheme({\n  palette: {\n    secondary: {\n      main: '#00acee',\n    },\n  },\n});\n\nconst useStyles = makeStyles(() =>\n  createStyles({\n    container: {\n      userSelect: 'none',\n    },\n    row: {\n      backgroundColor: 'lightgray',\n    },\n    imgWrapper: {\n      position: 'relative',\n      width: '100%',\n      overflow: 'hidden',\n    },\n    img: {\n      position: 'absolute',\n      top: 0,\n      left: 0,\n      width: '100%',\n      height: '100%',\n      objectFit: 'cover',\n    },\n    button: {\n      position: 'absolute',\n      top: 0,\n      left: 0,\n      width: '100%',\n      height: '100%',\n      backgroundColor: 'transparent',\n      color: 'transparent',\n      cursor: 'pointer',\n      padding: 0,\n    },\n    twitter: {\n      color: 'white',\n      fontWeight: 700,\n      textTransform: 'none',\n    },\n  })\n);\n\ntype Trans = {\n  i: number;\n  j: number;\n  di: number;\n  dj: number;\n};\n\nconst App: VFC = () => {\n  const classes = useStyles();\n  const [imageData, setImageData] = useState<string | undefined>(undefined);\n  const [ratio, setRatio] = useState('100%');\n  const [split, setSplit] = useState(4);\n  const [isDialogOpen, setIsDialogOpen] = useState(false);\n  const [puzzle, setPuzzle] = useState<Puzzle>(new Puzzle(split, true));\n  const [trans, setTrans] = useState<Trans>({ i: -1, j: -1, di: 0, dj: 0 });\n\n  useEffect(() => setPuzzle(new Puzzle(split, true)), [imageData, split]);\n\n  const duration = 100;\n  const panelWidth = `${100 / puzzle.split}%`;\n  const buttonText = imageData ? '別の画像を選択' : 'パズルにしたい画像を選択';\n\n  const imgTransform = (i: number, j: number) => {\n    const x = 0.5 - (j - 0.5) / puzzle.split;\n    const y = 0.5 - (i - 0.5) / puzzle.split;\n    return `scale(${puzzle.split}) translate(${x * 100}%, ${y * 100}%) `;\n  };\n\n  const gridTransition = (state: string) =>\n    state === 'entering' ? `all ${duration}ms ease-in-out` : 'none';\n\n  const gridTransform = (state: string) => {\n    const enter = state === 'entering' || state === 'entered';\n    const x = enter ? trans.dj * 100 : 0;\n    const y = enter ? trans.di * 100 : 0;\n    return `translate(${x}%, ${y}%)`;\n  };\n\n  const onChangeInput = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const { target } = e;\n    const { files } = target;\n    const file = files && files.length ? files[0] : null;\n    if (!file) return;\n\n    setImageData(undefined);\n    const img = new Image();\n    img.onload = () => {\n      URL.revokeObjectURL(img.src);\n      setRatio(`${(img.naturalHeight / img.naturalWidth) * 100}%`);\n    };\n    img.src = URL.createObjectURL(file);\n\n    const reader = new FileReader();\n    reader.readAsDataURL(file);\n    reader.onload = () => {\n      const { result } = reader;\n\n      setImageData(result as string);\n    };\n    e.target.value = '';\n    setIsDialogOpen(true);\n  };\n\n  const onClick = (i: number, j: number) => {\n    const [di, dj] = puzzle.getMovingDirection(i, j);\n    if (di === 0 && dj === 0) return;\n    setTrans({ i, j, di, dj });\n  };\n\n  const onEntered = () => {\n    const newPuzzle = puzzle.move(trans.i, trans.j, trans.di, trans.dj);\n    setPuzzle(newPuzzle);\n    setTrans({ i: -1, j: -1, di: 0, dj: 0 });\n  };\n\n  const tweet = () => {\n    const difficulty = (() => {\n      if (split === 3) return 'かんたん';\n      if (split === 4) return 'ふつう';\n      return 'むずかしい';\n    })();\n    const text = `スライドパズル(${difficulty})を完成させました！\\n\\nryochansq.github.io/slide-puzzle/\\n\\n#なんでもスライドパズル`;\n    const encodedText = encodeURIComponent(text);\n    const intent = `https://twitter.com/intent/tweet?text=${encodedText}`;\n    window.open(intent);\n  };\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Container component=\"main\" maxWidth=\"xs\" className={classes.container}>\n        <CssBaseline />\n        <Grid container spacing={4}>\n          <Grid item container justify=\"center\">\n            <Typography component=\"h1\" variant=\"h5\">\n              なんでもスライドパズル\n            </Typography>\n          </Grid>\n          <Grid item container justify=\"center\">\n            <Button\n              fullWidth={!imageData}\n              variant=\"contained\"\n              color=\"primary\"\n              component=\"label\"\n            >\n              {buttonText}\n              <input\n                type=\"file\"\n                accept=\"image/*\"\n                hidden\n                onChange={onChangeInput}\n              />\n            </Button>\n          </Grid>\n          {imageData && (\n            <Grid item container xs={12}>\n              {puzzle.panels.map((row, i) => {\n                if (i < 1 || puzzle.split < i) return null;\n                return (\n                  <Grid\n                    item\n                    container\n                    direction=\"row\"\n                    key={row[0].key()}\n                    className={classes.row}\n                  >\n                    {row.map((el, j) => {\n                      if (j < 1 || puzzle.split < j) return null;\n                      return (\n                        <Transition\n                          key={el.key()}\n                          in={trans.i === i && trans.j === j}\n                          timeout={duration}\n                          onEntered={onEntered}\n                        >\n                          {(state) => (\n                            <Grid\n                              item\n                              container\n                              justify=\"center\"\n                              style={{\n                                transition: gridTransition(state),\n                                transform: gridTransform(state),\n                                width: panelWidth,\n                              }}\n                            >\n                              <div\n                                className={classes.imgWrapper}\n                                style={{\n                                  paddingTop: ratio,\n                                }}\n                              >\n                                {(!el.isLowerRight || puzzle.solved()) && (\n                                  <>\n                                    <img\n                                      src={imageData}\n                                      alt=\"選択画像\"\n                                      className={classes.img}\n                                      style={{\n                                        transform: imgTransform(el.i, el.j),\n                                      }}\n                                    />\n                                    {!puzzle.solved() && (\n                                      <button\n                                        type=\"button\"\n                                        className={classes.button}\n                                        onClick={() => onClick(i, j)}\n                                      >\n                                        {' '}\n                                      </button>\n                                    )}\n                                  </>\n                                )}\n                              </div>\n                            </Grid>\n                          )}\n                        </Transition>\n                      );\n                    })}\n                  </Grid>\n                );\n              })}\n            </Grid>\n          )}\n          {puzzle.solved() && (\n            <>\n              <Grid item container justify=\"center\">\n                <Typography component=\"h1\" variant=\"h5\">\n                  完成！！\n                </Typography>\n              </Grid>\n              <Grid item container justify=\"center\">\n                <Button\n                  variant=\"contained\"\n                  color=\"secondary\"\n                  className={classes.twitter}\n                  onClick={tweet}\n                >\n                  Twitterで共有\n                </Button>\n              </Grid>\n            </>\n          )}\n        </Grid>\n      </Container>\n      <DifficultyDialog\n        isDialogOpen={isDialogOpen}\n        setIsDialogOpen={setIsDialogOpen}\n        split={split}\n        setSplit={setSplit}\n      />\n    </ThemeProvider>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}