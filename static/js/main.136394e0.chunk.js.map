{"version":3,"sources":["App.tsx","index.tsx"],"names":["useStyles","makeStyles","createStyles","container","userSelect","imgWrapper","position","width","overflow","img","top","left","height","objectFit","button","backgroundColor","color","cursor","padding","Panel","i","j","split","calcKey","key","isRightPosition","isLowerRight","this","di","dj","App","classes","useState","undefined","imageData","setImageData","ratio","setRatio","panels","setPanels","solved","setSolved","useEffect","array","Array","map","fill","l","k","Math","floor","random","ni","nj","p","np","xs","buttonText","transform","x","y","judgeSolved","newPanels","res","Container","component","maxWidth","className","CssBaseline","Grid","spacing","item","justify","Typography","variant","Button","fullWidth","type","accept","hidden","onChange","e","files","target","file","length","Image","onload","URL","revokeObjectURL","src","naturalHeight","naturalWidth","createObjectURL","reader","FileReader","readAsDataURL","result","row","direction","el","style","paddingTop","alt","onClick","panel","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.136394e0.chunk.js","sourcesContent":["import { VFC, useState, useEffect } from 'react';\nimport {\n  Button,\n  Container,\n  CssBaseline,\n  Grid,\n  GridSize,\n  Typography,\n} from '@material-ui/core';\nimport { createStyles, makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(() =>\n  createStyles({\n    container: {\n      userSelect: 'none',\n    },\n    imgWrapper: {\n      position: 'relative',\n      width: '100%',\n      overflow: 'hidden',\n    },\n    img: {\n      position: 'absolute',\n      top: 0,\n      left: 0,\n      width: '100%',\n      height: '100%',\n      objectFit: 'cover',\n    },\n    button: {\n      position: 'absolute',\n      top: 0,\n      left: 0,\n      width: '100%',\n      height: '100%',\n      backgroundColor: 'transparent',\n      color: 'transparent',\n      cursor: 'pointer',\n      padding: 0,\n    },\n  })\n);\n\nclass Panel {\n  i: number;\n\n  j: number;\n\n  split: number;\n\n  constructor(i: number, j: number, split: number) {\n    this.i = i;\n    this.j = j;\n    this.split = split;\n  }\n\n  calcKey = (i: number, j: number) => i * (this.split + 2) + j;\n\n  key = () => this.calcKey(this.i, this.j);\n\n  isRightPosition = (i: number, j: number) => this.calcKey(i, j) === this.key();\n\n  isLowerRight = () => this.i === this.split && this.j === this.split;\n}\n\nconst di = [-1, 0, 0, 1];\nconst dj = [0, -1, 1, 0];\n\nconst App: VFC = () => {\n  const classes = useStyles();\n  const [imageData, setImageData] = useState<string | undefined>(undefined);\n  const [ratio, setRatio] = useState('100%');\n  const [split] = useState(4);\n  const [panels, setPanels] = useState<Panel[][]>([]);\n  const [solved, setSolved] = useState(false);\n\n  useEffect(() => {\n    // 初期化\n    setSolved(false);\n    const array = [...Array<Panel[]>(split + 2)].map(() =>\n      Array<Panel>(split + 2).fill(new Panel(-1, -1, split))\n    );\n    for (let i = 0; i < split + 2; i += 1)\n      for (let j = 0; j < split + 2; j += 1)\n        array[i][j] = new Panel(i, j, split);\n\n    // シャッフル\n    let i = split;\n    let j = split;\n    for (let l = 0; l < 1000; l += 1) {\n      const k = Math.floor(Math.random() * 4);\n      const [ni, nj] = [i + di[k], j + dj[k]];\n      if (ni >= 1 && ni <= split && nj >= 1 && nj <= split) {\n        const p = new Panel(array[i][j].i, array[i][j].j, split);\n        const np = new Panel(array[ni][nj].i, array[ni][nj].j, split);\n        array[ni][nj] = p;\n        array[i][j] = np;\n        [i, j] = [ni, nj];\n      }\n    }\n    setPanels(array);\n  }, [split, imageData]);\n\n  const xs = Math.floor(12 / split) as GridSize;\n  const buttonText = imageData ? 'Select another image' : 'Select image';\n\n  const transform = (i: number, j: number) => {\n    const x = 0.5 - (j - 0.5) / split;\n    const y = 0.5 - (i - 0.5) / split;\n    return `scale(${split}) translate(${x * 100}%, ${y * 100}%) `;\n  };\n\n  const onChangeInput = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const { target } = e;\n    const { files } = target;\n    const file = files && files.length ? files[0] : null;\n    if (!file) return;\n\n    const img = new Image();\n    img.onload = () => {\n      URL.revokeObjectURL(img.src);\n      setRatio(`${(img.naturalHeight / img.naturalWidth) * 100}%`);\n    };\n    img.src = URL.createObjectURL(file);\n\n    const reader = new FileReader();\n    reader.readAsDataURL(file);\n    reader.onload = () => {\n      const { result } = reader;\n\n      setImageData(result as string);\n    };\n  };\n\n  const judgeSolved = (newPanels: Panel[][]): boolean => {\n    let res = true;\n    for (let i = 0; i < split + 2; i += 1)\n      for (let j = 0; j < split + 2; j += 1)\n        if (!newPanels[i][j].isRightPosition(i, j)) res = false;\n    return res;\n  };\n\n  const onClick = (i: number, j: number) => {\n    for (let k = 0; k < 4; k += 1) {\n      const [ni, nj] = [i + di[k], j + dj[k]];\n      if (panels[ni][nj].isLowerRight()) {\n        const newPanels = panels.map((row) =>\n          row.map((panel) => new Panel(panel.i, panel.j, split))\n        );\n        newPanels[i][j] = panels[ni][nj];\n        newPanels[ni][nj] = panels[i][j];\n        setPanels(newPanels);\n        setSolved(judgeSolved(newPanels));\n        return;\n      }\n    }\n  };\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\" className={classes.container}>\n      <CssBaseline />\n      <Grid container spacing={4}>\n        <Grid item container justify=\"center\">\n          <Typography component=\"h1\" variant=\"h5\">\n            Slide Puzzle Maker\n          </Typography>\n        </Grid>\n        <Grid item container justify=\"center\">\n          <Button\n            fullWidth={!imageData}\n            variant=\"contained\"\n            color=\"primary\"\n            component=\"label\"\n          >\n            {buttonText}\n            <input\n              type=\"file\"\n              accept=\"image/*\"\n              hidden\n              onChange={onChangeInput}\n            />\n          </Button>\n        </Grid>\n        {imageData && (\n          <>\n            <Grid item container xs={12}>\n              {panels.map((row, i) => {\n                if (i < 1 || split < i) return null;\n                return (\n                  <Grid item container direction=\"row\" key={row[0].key()}>\n                    {row.map((el, j) => {\n                      if (j < 1 || split < j) return null;\n                      return (\n                        <Grid\n                          item\n                          container\n                          key={el.key()}\n                          xs={xs}\n                          justify=\"center\"\n                        >\n                          <div\n                            className={classes.imgWrapper}\n                            style={{\n                              paddingTop: ratio,\n                            }}\n                          >\n                            {(!el.isLowerRight() || solved) && (\n                              <>\n                                <img\n                                  src={imageData}\n                                  alt=\"選択画像\"\n                                  className={classes.img}\n                                  style={{\n                                    transform: transform(el.i, el.j),\n                                  }}\n                                />\n                                {!solved && (\n                                  <button\n                                    type=\"button\"\n                                    className={classes.button}\n                                    onClick={() => onClick(i, j)}\n                                  >\n                                    {' '}\n                                  </button>\n                                )}\n                              </>\n                            )}\n                          </div>\n                        </Grid>\n                      );\n                    })}\n                  </Grid>\n                );\n              })}\n            </Grid>\n          </>\n        )}\n        {solved && (\n          <Grid item container justify=\"center\">\n            <Typography component=\"h1\" variant=\"h5\">\n              Congratulations!!\n            </Typography>\n          </Grid>\n        )}\n      </Grid>\n    </Container>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}