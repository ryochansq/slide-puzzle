{"version":3,"sources":["App.tsx","index.tsx"],"names":["useStyles","makeStyles","createStyles","container","userSelect","imgWrapper","position","width","overflow","img","top","left","height","objectFit","button","backgroundColor","color","cursor","padding","Panel","i","j","split","key","isLowerRight","this","di","dj","App","classes","useState","undefined","imageData","setImageData","ratio","setRatio","panels","setPanels","useEffect","array","Array","map","fill","l","k","Math","floor","random","ni","nj","p","np","xs","buttonText","transform","x","y","Container","component","maxWidth","className","CssBaseline","Grid","spacing","item","justify","Typography","variant","Button","fullWidth","type","accept","hidden","onChange","e","files","target","file","length","Image","onload","URL","revokeObjectURL","src","naturalHeight","naturalWidth","createObjectURL","reader","FileReader","readAsDataURL","result","row","direction","el","style","paddingTop","alt","onClick","newPanels","panel","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mRAWMA,EAAYC,aAAW,kBAC3BC,YAAa,CACXC,UAAW,CACTC,WAAY,QAEdC,WAAY,CACVC,SAAU,WACVC,MAAO,OACPC,SAAU,UAEZC,IAAK,CACHH,SAAU,WACVI,IAAK,EACLC,KAAM,EACNJ,MAAO,OACPK,OAAQ,OACRC,UAAW,SAEbC,OAAQ,CACNR,SAAU,WACVI,IAAK,EACLC,KAAM,EACNJ,MAAO,OACPK,OAAQ,OACRG,gBAAiB,cACjBC,MAAO,cACPC,OAAQ,UACRC,QAAS,QAKTC,EAOJ,WAAYC,EAAWC,EAAWC,GAAgB,IAAD,gCANjDF,OAMiD,OAJjDC,OAIiD,OAFjDC,WAEiD,OAMjDC,IAAM,kBAAM,EAAKH,GAAK,EAAKE,MAAQ,GAAK,EAAKD,GANI,KAQjDG,aAAe,kBAAM,EAAKJ,IAAM,EAAKE,OAAS,EAAKD,IAAM,EAAKC,OAP5DG,KAAKL,EAAIA,EACTK,KAAKJ,EAAIA,EACTI,KAAKH,MAAQA,GAQXI,EAAK,EAAE,EAAG,EAAG,EAAG,GAChBC,EAAK,CAAC,GAAI,EAAG,EAAG,GAmKPC,EAjKE,WACf,IAAMC,EAAU7B,IADK,EAEa8B,wBAA6BC,GAF1C,mBAEdC,EAFc,KAEHC,EAFG,OAGKH,mBAAS,QAHd,mBAGdI,EAHc,KAGPC,EAHO,OAILL,mBAAS,GAAlBR,EAJc,sBAKOQ,mBAAoB,IAL3B,mBAKdM,EALc,KAKNC,EALM,KAOrBC,qBAAU,WAKR,IAHA,IAAMC,EAAQ,YAAIC,MAAelB,EAAQ,IAAImB,KAAI,kBAC/CD,MAAalB,EAAQ,GAAGoB,KAAK,IAAIvB,GAAO,GAAI,EAAGG,OAExCF,EAAI,EAAGA,EAAIE,EAAQ,EAAGF,GAAK,EAClC,IAAK,IAAIC,EAAI,EAAGA,EAAIC,EAAQ,EAAGD,GAAK,EAClCkB,EAAMnB,GAAGC,GAAK,IAAIF,EAAMC,EAAGC,EAAGC,GAKlC,IAFA,IAAIF,EAAIE,EACJD,EAAIC,EACCqB,EAAI,EAAGA,EAAI,IAAMA,GAAK,EAAG,CAChC,IAAMC,EAAIC,KAAKC,MAAsB,EAAhBD,KAAKE,UACnBC,EAAW5B,EAAIM,EAAGkB,GAAdK,EAAkB5B,EAAIM,EAAGiB,GACpC,GAAII,GAAM,GAAKA,GAAM1B,GAAS2B,GAAM,GAAKA,GAAM3B,EAAO,CACpD,IAAM4B,EAAI,IAAI/B,EAAMoB,EAAMnB,GAAGC,GAAGD,EAAGmB,EAAMnB,GAAGC,GAAGA,EAAGC,GAC5C6B,EAAK,IAAIhC,EAAMoB,EAAMS,GAAIC,GAAI7B,EAAGmB,EAAMS,GAAIC,GAAI5B,EAAGC,GACvDiB,EAAMS,GAAIC,GAAMC,EAChBX,EAAMnB,GAAGC,GAAK8B,EACb/B,EAAS4B,EAAN3B,EAAU4B,GAGlBZ,EAAUE,KACT,CAACjB,EAAOU,IAEX,IAAMoB,EAAKP,KAAKC,MAAM,GAAKxB,GACrB+B,EAAarB,EAAY,uBAAyB,eAElDsB,EAAY,SAAClC,EAAWC,GAC5B,IAAMkC,EAAI,IAAOlC,EAAI,IAAOC,EACtBkC,EAAI,IAAOpC,EAAI,IAAOE,EAC5B,MAAM,SAAN,OAAgBA,EAAhB,uBAAwC,IAAJiC,EAApC,cAAqD,IAAJC,EAAjD,QAwCF,OACE,eAACC,EAAA,EAAD,CAAWC,UAAU,OAAOC,SAAS,KAAKC,UAAW/B,EAAQ1B,UAA7D,UACE,cAAC0D,EAAA,EAAD,IACA,eAACC,EAAA,EAAD,CAAM3D,WAAS,EAAC4D,QAAS,EAAzB,UACE,cAACD,EAAA,EAAD,CAAME,MAAI,EAAC7D,WAAS,EAAC8D,QAAQ,SAA7B,SACE,cAACC,EAAA,EAAD,CAAYR,UAAU,KAAKS,QAAQ,KAAnC,kCAIF,cAACL,EAAA,EAAD,CAAME,MAAI,EAAC7D,WAAS,EAAC8D,QAAQ,SAA7B,SACE,eAACG,EAAA,EAAD,CACEC,WAAYrC,EACZmC,QAAQ,YACRnD,MAAM,UACN0C,UAAU,QAJZ,UAMGL,EACD,uBACEiB,KAAK,OACLC,OAAO,UACPC,QAAM,EACNC,SA1DU,SAACC,GAA4C,IAEzDC,EADWD,EAAXE,OACAD,MACFE,EAAOF,GAASA,EAAMG,OAASH,EAAM,GAAK,KAChD,GAAKE,EAAL,CAEA,IAAMpE,EAAM,IAAIsE,MAChBtE,EAAIuE,OAAS,WACXC,IAAIC,gBAAgBzE,EAAI0E,KACxBhD,EAAS,GAAD,OAAK1B,EAAI2E,cAAgB3E,EAAI4E,aAAgB,IAA7C,OAEV5E,EAAI0E,IAAMF,IAAIK,gBAAgBT,GAE9B,IAAMU,EAAS,IAAIC,WACnBD,EAAOE,cAAcZ,GACrBU,EAAOP,OAAS,WAAO,IACbU,EAAWH,EAAXG,OAERzD,EAAayD,aA4CV1D,GACC,mCACE,cAAC8B,EAAA,EAAD,CAAME,MAAI,EAAC7D,WAAS,EAACiD,GAAI,GAAzB,SACGhB,EAAOK,KAAI,SAACkD,EAAKvE,GAChB,OAAIA,EAAI,GAAKE,EAAQF,EAAU,KAE7B,cAAC0C,EAAA,EAAD,CAAME,MAAI,EAAC7D,WAAS,EAACyF,UAAU,MAA/B,SACGD,EAAIlD,KAAI,SAACoD,EAAIxE,GACZ,OAAIA,EAAI,GAAKC,EAAQD,EAAU,KAE7B,cAACyC,EAAA,EAAD,CACEE,MAAI,EACJ7D,WAAS,EAETiD,GAAIA,EACJa,QAAQ,SALV,SAOE,qBACEL,UAAW/B,EAAQxB,WACnByF,MAAO,CACLC,WAAY7D,GAHhB,UAMI2D,EAAGrE,gBACH,qCACE,qBACE2D,IAAKnD,EACLgE,IAAI,2BACJpC,UAAW/B,EAAQpB,IACnBqF,MAAO,CACLxC,UAAWA,EAAUuC,EAAGzE,EAAGyE,EAAGxE,MAGlC,wBACEiD,KAAK,SACLV,UAAW/B,EAAQf,OACnBmF,QAAS,kBA5EzB,SAAC7E,EAAWC,GAC1B,IAAK,IAAIuB,EAAI,EAAGA,EAAI,EAAGA,GAAK,EAAG,CAAC,IACvBI,EAAW5B,EAAIM,EAAGkB,GAAdK,EAAkB5B,EAAIM,EAAGiB,GACpC,GAAIR,EAAOY,GAAIC,GAAIzB,eAAgB,CACjC,IAAM0E,EAAY9D,EAAOK,KAAI,SAACkD,GAAD,OAC3BA,EAAIlD,KAAI,SAAC0D,GAAD,OAAW,IAAIhF,EAAMgF,EAAM/E,EAAG+E,EAAM9E,EAAGC,SAKjD,OAHA4E,EAAU9E,GAAGC,GAAKe,EAAOY,GAAIC,GAC7BiD,EAAUlD,GAAIC,GAAMb,EAAOhB,GAAGC,QAC9BgB,EAAU6D,KAmE+BD,CAAQ7E,EAAGC,IAH5B,SAKG,YAzBJwE,EAAGtE,WAP0BoE,EAAI,GAAGpE,qBCzKnE6E,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.5e094063.chunk.js","sourcesContent":["import { VFC, useState, useEffect } from 'react';\nimport {\n  Button,\n  Container,\n  CssBaseline,\n  Grid,\n  GridSize,\n  Typography,\n} from '@material-ui/core';\nimport { createStyles, makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(() =>\n  createStyles({\n    container: {\n      userSelect: 'none',\n    },\n    imgWrapper: {\n      position: 'relative',\n      width: '100%',\n      overflow: 'hidden',\n    },\n    img: {\n      position: 'absolute',\n      top: 0,\n      left: 0,\n      width: '100%',\n      height: '100%',\n      objectFit: 'cover',\n    },\n    button: {\n      position: 'absolute',\n      top: 0,\n      left: 0,\n      width: '100%',\n      height: '100%',\n      backgroundColor: 'transparent',\n      color: 'transparent',\n      cursor: 'pointer',\n      padding: 0,\n    },\n  })\n);\n\nclass Panel {\n  i: number;\n\n  j: number;\n\n  split: number;\n\n  constructor(i: number, j: number, split: number) {\n    this.i = i;\n    this.j = j;\n    this.split = split;\n  }\n\n  key = () => this.i * (this.split + 2) + this.j;\n\n  isLowerRight = () => this.i === this.split && this.j === this.split;\n}\n\nconst di = [-1, 0, 0, 1];\nconst dj = [0, -1, 1, 0];\n\nconst App: VFC = () => {\n  const classes = useStyles();\n  const [imageData, setImageData] = useState<string | undefined>(undefined);\n  const [ratio, setRatio] = useState('100%');\n  const [split] = useState(4);\n  const [panels, setPanels] = useState<Panel[][]>([]);\n\n  useEffect(() => {\n    // 初期化\n    const array = [...Array<Panel[]>(split + 2)].map(() =>\n      Array<Panel>(split + 2).fill(new Panel(-1, -1, split))\n    );\n    for (let i = 0; i < split + 2; i += 1)\n      for (let j = 0; j < split + 2; j += 1)\n        array[i][j] = new Panel(i, j, split);\n\n    // シャッフル\n    let i = split;\n    let j = split;\n    for (let l = 0; l < 1000; l += 1) {\n      const k = Math.floor(Math.random() * 4);\n      const [ni, nj] = [i + di[k], j + dj[k]];\n      if (ni >= 1 && ni <= split && nj >= 1 && nj <= split) {\n        const p = new Panel(array[i][j].i, array[i][j].j, split);\n        const np = new Panel(array[ni][nj].i, array[ni][nj].j, split);\n        array[ni][nj] = p;\n        array[i][j] = np;\n        [i, j] = [ni, nj];\n      }\n    }\n    setPanels(array);\n  }, [split, imageData]);\n\n  const xs = Math.floor(12 / split) as GridSize;\n  const buttonText = imageData ? 'Select another image' : 'Select image';\n\n  const transform = (i: number, j: number) => {\n    const x = 0.5 - (j - 0.5) / split;\n    const y = 0.5 - (i - 0.5) / split;\n    return `scale(${split}) translate(${x * 100}%, ${y * 100}%) `;\n  };\n\n  const onChangeInput = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const { target } = e;\n    const { files } = target;\n    const file = files && files.length ? files[0] : null;\n    if (!file) return;\n\n    const img = new Image();\n    img.onload = () => {\n      URL.revokeObjectURL(img.src);\n      setRatio(`${(img.naturalHeight / img.naturalWidth) * 100}%`);\n    };\n    img.src = URL.createObjectURL(file);\n\n    const reader = new FileReader();\n    reader.readAsDataURL(file);\n    reader.onload = () => {\n      const { result } = reader;\n\n      setImageData(result as string);\n    };\n  };\n\n  const onClick = (i: number, j: number) => {\n    for (let k = 0; k < 4; k += 1) {\n      const [ni, nj] = [i + di[k], j + dj[k]];\n      if (panels[ni][nj].isLowerRight()) {\n        const newPanels = panels.map((row) =>\n          row.map((panel) => new Panel(panel.i, panel.j, split))\n        );\n        newPanels[i][j] = panels[ni][nj];\n        newPanels[ni][nj] = panels[i][j];\n        setPanels(newPanels);\n        return;\n      }\n    }\n  };\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\" className={classes.container}>\n      <CssBaseline />\n      <Grid container spacing={4}>\n        <Grid item container justify=\"center\">\n          <Typography component=\"h1\" variant=\"h5\">\n            Slide Puzzle Maker\n          </Typography>\n        </Grid>\n        <Grid item container justify=\"center\">\n          <Button\n            fullWidth={!imageData}\n            variant=\"contained\"\n            color=\"primary\"\n            component=\"label\"\n          >\n            {buttonText}\n            <input\n              type=\"file\"\n              accept=\"image/*\"\n              hidden\n              onChange={onChangeInput}\n            />\n          </Button>\n        </Grid>\n        {imageData && (\n          <>\n            <Grid item container xs={12}>\n              {panels.map((row, i) => {\n                if (i < 1 || split < i) return null;\n                return (\n                  <Grid item container direction=\"row\" key={row[0].key()}>\n                    {row.map((el, j) => {\n                      if (j < 1 || split < j) return null;\n                      return (\n                        <Grid\n                          item\n                          container\n                          key={el.key()}\n                          xs={xs}\n                          justify=\"center\"\n                        >\n                          <div\n                            className={classes.imgWrapper}\n                            style={{\n                              paddingTop: ratio,\n                            }}\n                          >\n                            {!el.isLowerRight() && (\n                              <>\n                                <img\n                                  src={imageData}\n                                  alt=\"選択画像\"\n                                  className={classes.img}\n                                  style={{\n                                    transform: transform(el.i, el.j),\n                                  }}\n                                />\n                                <button\n                                  type=\"button\"\n                                  className={classes.button}\n                                  onClick={() => onClick(i, j)}\n                                >\n                                  {' '}\n                                </button>\n                              </>\n                            )}\n                          </div>\n                        </Grid>\n                      );\n                    })}\n                  </Grid>\n                );\n              })}\n            </Grid>\n          </>\n        )}\n      </Grid>\n    </Container>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}