{"version":3,"sources":["classes/Panel.ts","classes/Puzzle.ts","App.tsx","index.tsx"],"names":["Panel","i","j","isLowerRight","calcKey","key","isRightPosition","this","di","dj","Puzzle","split","shuffle","panels","onClick","k","ni","nj","newPanels","map","row","panel","newPuzzle","solved","res","array","Array","fill","l","Math","floor","random","p","np","useStyles","makeStyles","createStyles","container","userSelect","imgWrapper","position","width","overflow","img","top","left","height","objectFit","button","backgroundColor","color","cursor","padding","App","classes","useState","undefined","imageData","setImageData","ratio","setRatio","puzzle","setPuzzle","useEffect","prevPuzzle","xs","buttonText","transform","x","y","Container","component","maxWidth","className","CssBaseline","Grid","spacing","item","justify","Typography","variant","Button","fullWidth","type","accept","hidden","onChange","e","files","target","file","length","Image","onload","URL","revokeObjectURL","src","naturalHeight","naturalWidth","createObjectURL","reader","FileReader","readAsDataURL","result","direction","el","style","paddingTop","alt","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2977fb23.chunk.js","sourcesContent":["export default class Panel {\n  i: number;\n\n  j: number;\n\n  isLowerRight: boolean;\n\n  constructor(i: number, j: number, isLowerRight: boolean) {\n    this.i = i;\n    this.j = j;\n    this.isLowerRight = isLowerRight;\n  }\n\n  calcKey = (i: number, j: number): number => i * 100 + j;\n\n  key = (): number => this.calcKey(this.i, this.j);\n\n  isRightPosition = (i: number, j: number): boolean =>\n    this.calcKey(i, j) === this.key();\n}\n","import Panel from './Panel';\n\nconst di = [-1, 0, 0, 1];\nconst dj = [0, -1, 1, 0];\n\nexport default class Puzzle {\n  panels: Panel[][];\n\n  split: number;\n\n  constructor(split: number, shuffle: boolean) {\n    // 初期化\n    const array = [...Array<Panel[]>(split + 2)].map(() =>\n      Array<Panel>(split + 2).fill(new Panel(-1, -1, false))\n    );\n    for (let i = 0; i < split + 2; i += 1)\n      for (let j = 0; j < split + 2; j += 1)\n        array[i][j] = new Panel(i, j, i === split && j === split);\n\n    // シャッフル\n    if (shuffle) {\n      let i = split;\n      let j = split;\n      for (let l = 0; l < 1000; l += 1) {\n        const k = Math.floor(Math.random() * 4);\n        const [ni, nj] = [i + di[k], j + dj[k]];\n        if (ni >= 1 && ni <= split && nj >= 1 && nj <= split) {\n          const p = new Panel(\n            array[i][j].i,\n            array[i][j].j,\n            array[i][j].isLowerRight\n          );\n          const np = new Panel(\n            array[ni][nj].i,\n            array[ni][nj].j,\n            array[ni][nj].isLowerRight\n          );\n          array[ni][nj] = p;\n          array[i][j] = np;\n          [i, j] = [ni, nj];\n        }\n      }\n    }\n    this.panels = array;\n    this.split = split;\n  }\n\n  onClick = (i: number, j: number): Puzzle => {\n    for (let k = 0; k < 4; k += 1) {\n      const [ni, nj] = [i + di[k], j + dj[k]];\n      if (this.panels[ni][nj].isLowerRight) {\n        const newPanels = this.panels.map((row) =>\n          row.map((panel) => new Panel(panel.i, panel.j, panel.isLowerRight))\n        );\n        newPanels[i][j] = this.panels[ni][nj];\n        newPanels[ni][nj] = this.panels[i][j];\n        const newPuzzle = new Puzzle(this.split, false);\n        newPuzzle.panels = newPanels;\n        return newPuzzle;\n      }\n    }\n    return this;\n  };\n\n  solved = (): boolean => {\n    let res = true;\n    for (let i = 0; i < this.split + 2; i += 1)\n      for (let j = 0; j < this.split + 2; j += 1)\n        if (!this.panels[i][j].isRightPosition(i, j)) res = false;\n    return res;\n  };\n}\n","import { VFC, useState, useEffect } from 'react';\nimport {\n  Button,\n  Container,\n  CssBaseline,\n  Grid,\n  GridSize,\n  Typography,\n} from '@material-ui/core';\nimport { createStyles, makeStyles } from '@material-ui/core/styles';\nimport Puzzle from './classes/Puzzle';\n\nconst useStyles = makeStyles(() =>\n  createStyles({\n    container: {\n      userSelect: 'none',\n    },\n    imgWrapper: {\n      position: 'relative',\n      width: '100%',\n      overflow: 'hidden',\n    },\n    img: {\n      position: 'absolute',\n      top: 0,\n      left: 0,\n      width: '100%',\n      height: '100%',\n      objectFit: 'cover',\n    },\n    button: {\n      position: 'absolute',\n      top: 0,\n      left: 0,\n      width: '100%',\n      height: '100%',\n      backgroundColor: 'transparent',\n      color: 'transparent',\n      cursor: 'pointer',\n      padding: 0,\n    },\n  })\n);\n\nconst App: VFC = () => {\n  const classes = useStyles();\n  const [imageData, setImageData] = useState<string | undefined>(undefined);\n  const [ratio, setRatio] = useState('100%');\n  const [puzzle, setPuzzle] = useState<Puzzle>(new Puzzle(4, false));\n\n  useEffect(() => {\n    setPuzzle((prevPuzzle) => new Puzzle(prevPuzzle.split, true));\n  }, [imageData]);\n\n  const xs = Math.floor(12 / puzzle.split) as GridSize;\n  const buttonText = imageData ? 'Select another image' : 'Select image';\n\n  const transform = (i: number, j: number) => {\n    const x = 0.5 - (j - 0.5) / puzzle.split;\n    const y = 0.5 - (i - 0.5) / puzzle.split;\n    return `scale(${puzzle.split}) translate(${x * 100}%, ${y * 100}%) `;\n  };\n\n  const onChangeInput = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const { target } = e;\n    const { files } = target;\n    const file = files && files.length ? files[0] : null;\n    if (!file) return;\n\n    const img = new Image();\n    img.onload = () => {\n      URL.revokeObjectURL(img.src);\n      setRatio(`${(img.naturalHeight / img.naturalWidth) * 100}%`);\n    };\n    img.src = URL.createObjectURL(file);\n\n    const reader = new FileReader();\n    reader.readAsDataURL(file);\n    reader.onload = () => {\n      const { result } = reader;\n\n      setImageData(result as string);\n    };\n  };\n\n  const onClick = (i: number, j: number) => {\n    const newPuzzle = puzzle.onClick(i, j);\n    setPuzzle(newPuzzle);\n  };\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\" className={classes.container}>\n      <CssBaseline />\n      <Grid container spacing={4}>\n        <Grid item container justify=\"center\">\n          <Typography component=\"h1\" variant=\"h5\">\n            Slide Puzzle Maker\n          </Typography>\n        </Grid>\n        <Grid item container justify=\"center\">\n          <Button\n            fullWidth={!imageData}\n            variant=\"contained\"\n            color=\"primary\"\n            component=\"label\"\n          >\n            {buttonText}\n            <input\n              type=\"file\"\n              accept=\"image/*\"\n              hidden\n              onChange={onChangeInput}\n            />\n          </Button>\n        </Grid>\n        {imageData && (\n          <>\n            <Grid item container xs={12}>\n              {puzzle.panels.map((row, i) => {\n                if (i < 1 || puzzle.split < i) return null;\n                return (\n                  <Grid item container direction=\"row\" key={row[0].key()}>\n                    {row.map((el, j) => {\n                      if (j < 1 || puzzle.split < j) return null;\n                      return (\n                        <Grid\n                          item\n                          container\n                          key={el.key()}\n                          xs={xs}\n                          justify=\"center\"\n                        >\n                          <div\n                            className={classes.imgWrapper}\n                            style={{\n                              paddingTop: ratio,\n                            }}\n                          >\n                            {(!el.isLowerRight || puzzle.solved()) && (\n                              <>\n                                <img\n                                  src={imageData}\n                                  alt=\"選択画像\"\n                                  className={classes.img}\n                                  style={{\n                                    transform: transform(el.i, el.j),\n                                  }}\n                                />\n                                {!puzzle.solved() && (\n                                  <button\n                                    type=\"button\"\n                                    className={classes.button}\n                                    onClick={() => onClick(i, j)}\n                                  >\n                                    {' '}\n                                  </button>\n                                )}\n                              </>\n                            )}\n                          </div>\n                        </Grid>\n                      );\n                    })}\n                  </Grid>\n                );\n              })}\n            </Grid>\n          </>\n        )}\n        {puzzle.solved() && (\n          <Grid item container justify=\"center\">\n            <Typography component=\"h1\" variant=\"h5\">\n              Congratulations!!\n            </Typography>\n          </Grid>\n        )}\n      </Grid>\n    </Container>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}