{"version":3,"sources":["classes/Panel.ts","classes/Puzzle.ts","App.tsx","index.tsx"],"names":["Panel","i","j","isLowerRight","calcKey","key","isRightPosition","this","di","dj","Puzzle","split","shuffle","panels","getMovingDirection","k","ni","nj","move","ei","ej","newPanels","map","row","panel","newPuzzle","solved","res","array","Array","fill","l","Math","floor","random","p","np","useStyles","makeStyles","createStyles","container","userSelect","backgroundColor","imgWrapper","position","width","overflow","img","top","left","height","objectFit","button","color","cursor","padding","App","classes","useState","undefined","imageData","setImageData","ratio","setRatio","puzzle","setPuzzle","trans","setTrans","useEffect","prevPuzzle","xs","buttonText","imgTransform","x","y","gridTransition","state","gridTransform","enter","onEntered","Container","component","maxWidth","className","CssBaseline","Grid","spacing","item","justify","Typography","variant","Button","fullWidth","type","accept","hidden","onChange","e","files","target","file","length","Image","onload","URL","revokeObjectURL","src","naturalHeight","naturalWidth","createObjectURL","reader","FileReader","readAsDataURL","result","direction","el","Transition","in","timeout","style","transition","transform","paddingTop","alt","onClick","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0142542d.chunk.js","sourcesContent":["export default class Panel {\n  i: number;\n\n  j: number;\n\n  isLowerRight: boolean;\n\n  constructor(i: number, j: number, isLowerRight: boolean) {\n    this.i = i;\n    this.j = j;\n    this.isLowerRight = isLowerRight;\n  }\n\n  calcKey = (i: number, j: number): number => i * 100 + j;\n\n  key = (): number => this.calcKey(this.i, this.j);\n\n  isRightPosition = (i: number, j: number): boolean =>\n    this.calcKey(i, j) === this.key();\n}\n","import Panel from './Panel';\n\nconst di = [-1, 0, 0, 1];\nconst dj = [0, -1, 1, 0];\n\nexport default class Puzzle {\n  panels: Panel[][];\n\n  split: number;\n\n  constructor(split: number, shuffle: boolean) {\n    // 初期化\n    const array = [...Array<Panel[]>(split + 2)].map(() =>\n      Array<Panel>(split + 2).fill(new Panel(-1, -1, false))\n    );\n    for (let i = 0; i < split + 2; i += 1)\n      for (let j = 0; j < split + 2; j += 1)\n        array[i][j] = new Panel(i, j, i === split && j === split);\n\n    // シャッフル\n    if (shuffle) {\n      let i = split;\n      let j = split;\n      for (let l = 0; l < 1000; l += 1) {\n        const k = Math.floor(Math.random() * 4);\n        const [ni, nj] = [i + di[k], j + dj[k]];\n        if (ni >= 1 && ni <= split && nj >= 1 && nj <= split) {\n          const p = new Panel(\n            array[i][j].i,\n            array[i][j].j,\n            array[i][j].isLowerRight\n          );\n          const np = new Panel(\n            array[ni][nj].i,\n            array[ni][nj].j,\n            array[ni][nj].isLowerRight\n          );\n          array[ni][nj] = p;\n          array[i][j] = np;\n          [i, j] = [ni, nj];\n        }\n      }\n    }\n    this.panels = array;\n    this.split = split;\n  }\n\n  getMovingDirection = (i: number, j: number): [number, number] => {\n    for (let k = 0; k < 4; k += 1) {\n      const [ni, nj] = [i + di[k], j + dj[k]];\n      if (this.panels[ni][nj].isLowerRight) return [di[k], dj[k]];\n    }\n    return [0, 0];\n  };\n\n  move = (i: number, j: number, ei: number, ej: number): Puzzle => {\n    const [ni, nj] = [i + ei, j + ej];\n    const newPanels = this.panels.map((row) =>\n      row.map((panel) => new Panel(panel.i, panel.j, panel.isLowerRight))\n    );\n    newPanels[i][j] = this.panels[ni][nj];\n    newPanels[ni][nj] = this.panels[i][j];\n    const newPuzzle = new Puzzle(this.split, false);\n    newPuzzle.panels = newPanels;\n    return newPuzzle;\n  };\n\n  solved = (): boolean => {\n    let res = true;\n    for (let i = 0; i < this.split + 2; i += 1)\n      for (let j = 0; j < this.split + 2; j += 1)\n        if (!this.panels[i][j].isRightPosition(i, j)) res = false;\n    return res;\n  };\n}\n","import { VFC, useState, useEffect } from 'react';\nimport {\n  Button,\n  Container,\n  CssBaseline,\n  Grid,\n  GridSize,\n  Typography,\n} from '@material-ui/core';\nimport { createStyles, makeStyles } from '@material-ui/core/styles';\nimport { Transition } from 'react-transition-group';\nimport Puzzle from './classes/Puzzle';\n\nconst useStyles = makeStyles(() =>\n  createStyles({\n    container: {\n      userSelect: 'none',\n    },\n    row: {\n      backgroundColor: 'lightgray',\n    },\n    imgWrapper: {\n      position: 'relative',\n      width: '100%',\n      overflow: 'hidden',\n    },\n    img: {\n      position: 'absolute',\n      top: 0,\n      left: 0,\n      width: '100%',\n      height: '100%',\n      objectFit: 'cover',\n    },\n    button: {\n      position: 'absolute',\n      top: 0,\n      left: 0,\n      width: '100%',\n      height: '100%',\n      backgroundColor: 'transparent',\n      color: 'transparent',\n      cursor: 'pointer',\n      padding: 0,\n    },\n  })\n);\n\ntype Trans = {\n  i: number;\n  j: number;\n  di: number;\n  dj: number;\n};\n\nconst App: VFC = () => {\n  const classes = useStyles();\n  const [imageData, setImageData] = useState<string | undefined>(undefined);\n  const [ratio, setRatio] = useState('100%');\n  const [puzzle, setPuzzle] = useState<Puzzle>(new Puzzle(4, false));\n  const [trans, setTrans] = useState<Trans>({ i: -1, j: -1, di: 0, dj: 0 });\n\n  useEffect(() => {\n    setPuzzle((prevPuzzle) => new Puzzle(prevPuzzle.split, true));\n  }, [imageData]);\n\n  const duration = 100;\n  const xs = Math.floor(12 / puzzle.split) as GridSize;\n  const buttonText = imageData ? 'Select another image' : 'Select image';\n\n  const imgTransform = (i: number, j: number) => {\n    const x = 0.5 - (j - 0.5) / puzzle.split;\n    const y = 0.5 - (i - 0.5) / puzzle.split;\n    return `scale(${puzzle.split}) translate(${x * 100}%, ${y * 100}%) `;\n  };\n\n  const gridTransition = (state: string) =>\n    state === 'entering' ? `all ${duration}ms ease-in-out` : 'none';\n\n  const gridTransform = (state: string) => {\n    const enter = state === 'entering' || state === 'entered';\n    const x = enter ? trans.dj * 100 : 0;\n    const y = enter ? trans.di * 100 : 0;\n    return `translate(${x}%, ${y}%)`;\n  };\n\n  const onChangeInput = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const { target } = e;\n    const { files } = target;\n    const file = files && files.length ? files[0] : null;\n    if (!file) return;\n\n    const img = new Image();\n    img.onload = () => {\n      URL.revokeObjectURL(img.src);\n      setRatio(`${(img.naturalHeight / img.naturalWidth) * 100}%`);\n    };\n    img.src = URL.createObjectURL(file);\n\n    const reader = new FileReader();\n    reader.readAsDataURL(file);\n    reader.onload = () => {\n      const { result } = reader;\n\n      setImageData(result as string);\n    };\n  };\n\n  const onClick = (i: number, j: number) => {\n    const [di, dj] = puzzle.getMovingDirection(i, j);\n    if (di === 0 && dj === 0) return;\n    setTrans({ i, j, di, dj });\n  };\n\n  const onEntered = () => {\n    const newPuzzle = puzzle.move(trans.i, trans.j, trans.di, trans.dj);\n    setPuzzle(newPuzzle);\n    setTrans({ i: -1, j: -1, di: 0, dj: 0 });\n  };\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\" className={classes.container}>\n      <CssBaseline />\n      <Grid container spacing={4}>\n        <Grid item container justify=\"center\">\n          <Typography component=\"h1\" variant=\"h5\">\n            Slide Puzzle Maker\n          </Typography>\n        </Grid>\n        <Grid item container justify=\"center\">\n          <Button\n            fullWidth={!imageData}\n            variant=\"contained\"\n            color=\"primary\"\n            component=\"label\"\n          >\n            {buttonText}\n            <input\n              type=\"file\"\n              accept=\"image/*\"\n              hidden\n              onChange={onChangeInput}\n            />\n          </Button>\n        </Grid>\n        {imageData && (\n          <>\n            <Grid item container xs={12}>\n              {puzzle.panels.map((row, i) => {\n                if (i < 1 || puzzle.split < i) return null;\n                return (\n                  <Grid\n                    item\n                    container\n                    direction=\"row\"\n                    key={row[0].key()}\n                    className={classes.row}\n                  >\n                    {row.map((el, j) => {\n                      if (j < 1 || puzzle.split < j) return null;\n                      return (\n                        <Transition\n                          key={el.key()}\n                          in={trans.i === i && trans.j === j}\n                          timeout={duration}\n                          onEntered={onEntered}\n                        >\n                          {(state) => (\n                            <Grid\n                              item\n                              container\n                              xs={xs}\n                              justify=\"center\"\n                              style={{\n                                transition: gridTransition(state),\n                                transform: gridTransform(state),\n                              }}\n                            >\n                              <div\n                                className={classes.imgWrapper}\n                                style={{\n                                  paddingTop: ratio,\n                                }}\n                              >\n                                {(!el.isLowerRight || puzzle.solved()) && (\n                                  <>\n                                    <img\n                                      src={imageData}\n                                      alt=\"選択画像\"\n                                      className={classes.img}\n                                      style={{\n                                        transform: imgTransform(el.i, el.j),\n                                      }}\n                                    />\n                                    {!puzzle.solved() && (\n                                      <button\n                                        type=\"button\"\n                                        className={classes.button}\n                                        onClick={() => onClick(i, j)}\n                                      >\n                                        {' '}\n                                      </button>\n                                    )}\n                                  </>\n                                )}\n                              </div>\n                            </Grid>\n                          )}\n                        </Transition>\n                      );\n                    })}\n                  </Grid>\n                );\n              })}\n            </Grid>\n          </>\n        )}\n        {puzzle.solved() && (\n          <Grid item container justify=\"center\">\n            <Typography component=\"h1\" variant=\"h5\">\n              Congratulations!!\n            </Typography>\n          </Grid>\n        )}\n      </Grid>\n    </Container>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}